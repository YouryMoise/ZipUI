{"ast":null,"code":"var _class;\nimport { read, utils } from 'xlsx';\nimport * as i0 from \"@angular/core\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'ZipProject';\n    /*\n           ZipCounter\n    Take an excel sheet with 2 key rows, the zip codes(ZIP) and\n    the event(some string with a date and tag(just care about tag))\n    Make an excel sheet with the tags on the left and\n    zip codes on the top, then the correct number for each zip-tag pair\n           ZipConverter\n    Given an excel sheet from ZipCounter(table with zip-tag pairs)\n    Convert all Zip Codes to coordinates\n    This may be too quick to justify being something\n    different\n           Frontend\n    Should have a button asking which you want to use\n    Allow you to choose a file by browsing file explorer\n    If you chose counter, it should ask if you want to do counter\n    and converter\n         \n    */\n    //START OF ZIP CONVERTER CODE\n    //need to figure out how to take files in\n    //just set any input vars for now\n    this.users = [];\n  }\n  csvImport($event) {\n    //console.log($event.target.files);\n    const files = $event.target.files;\n    if (files.length) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.onload = event => {\n        const wb = read(event.target.result);\n        const sheets = wb.SheetNames;\n        if (sheets.length) {\n          const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\n          this.users = rows;\n        }\n      };\n      reader.readAsArrayBuffer(file);\n      console.log(this.users);\n    }\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 1,\n  vars: 0,\n  consts: [[\"type\", \"file\", \"name\", \"file\", \"id\", \"inputGroupFile\", \"required\", \"\", \"accept\", \".csv, application/vnd.\\n  openxmlformats-officedocument. spreadsheetml.sheet,\\n  application/vnd.ms-excel\", 1, \"custom-file-input\", 3, \"change\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"input\", 0);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_0_listener($event) {\n        return ctx.csvImport($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["read","utils","AppComponent","constructor","title","users","csvImport","$event","files","target","length","file","reader","FileReader","onload","event","wb","result","sheets","SheetNames","rows","sheet_to_json","Sheets","readAsArrayBuffer","console","log","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","AppComponent_Template_input_change_0_listener","ɵɵelementEnd"],"sources":["C:\\Users\\macse\\Downloads\\ZipProject\\src\\app\\app.component.ts","C:\\Users\\macse\\Downloads\\ZipProject\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {read, utils, writeFile} from 'xlsx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ZipProject';\n\n  /*\n\n  ZipCounter\n  Take an excel sheet with 2 key rows, the zip codes(ZIP) and\n  the event(some string with a date and tag(just care about tag))\n  Make an excel sheet with the tags on the left and \n  zip codes on the top, then the correct number for each zip-tag pair\n\n  ZipConverter\n  Given an excel sheet from ZipCounter(table with zip-tag pairs)\n  Convert all Zip Codes to coordinates\n  This may be too quick to justify being something \n  different\n\n  Frontend\n  Should have a button asking which you want to use\n  Allow you to choose a file by browsing file explorer\n  If you chose counter, it should ask if you want to do counter\n  and converter\n\n\n  */\n\n\n//START OF ZIP CONVERTER CODE\n//need to figure out how to take files in\n//just set any input vars for now\n\nusers:any[] = [];\n  csvImport($event:any){\n    //console.log($event.target.files);\n    const files = $event.target.files;\n    if(files.length){\n      const file = files[0]\n      const reader = new FileReader();\n      reader.onload = (event:any) => {\n        const wb = read(event.target.result);\n        const sheets = wb.SheetNames;\n\n        if (sheets.length){\n          const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\n          this.users = rows;\n        }\n      };\n      reader.readAsArrayBuffer(file)\n      console.log(this.users);\n    }\n  }\n\n//take input file + input sheet and make\n//sure it actually exists on device\n\n//same for output(no sheet)\n\n//request tags and put them all in a list\n\n//read input file/sheet\n\n//create a dictionary of dictionaries \n//as we go\n//Each outer key is a unique tag\n//Each value is a dictionary\n  //Each key is zip, each val is #occurences\n//loop over the tags and add/update zip in \n//dict as necessary\n\n\n\n\n\n\n}\n","<input type=\"file\" name=\"file\" class=\"custom-file-input\"\n  id=\"inputGroupFile\" required (change)=\"csvImport ($event)\"\n  accept=\".csv, application/vnd.\n  openxmlformats-officedocument. spreadsheetml.sheet,\n  application/vnd.ms-excel\">"],"mappings":";AACA,SAAQA,IAAI,EAAEC,KAAK,QAAkB,MAAM;;AAO3C,OAAM,MAAOC,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,YAAY;IAEpB;;;;;;;;;;;;;;;;;;IAwBF;IACA;IACA;IAEA,KAAAC,KAAK,GAAS,EAAE;;EACdC,SAASA,CAACC,MAAU;IAClB;IACA,MAAMC,KAAK,GAAGD,MAAM,CAACE,MAAM,CAACD,KAAK;IACjC,IAAGA,KAAK,CAACE,MAAM,EAAC;MACd,MAAMC,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC;MACrB,MAAMI,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,KAAS,IAAI;QAC5B,MAAMC,EAAE,GAAGhB,IAAI,CAACe,KAAK,CAACN,MAAM,CAACQ,MAAM,CAAC;QACpC,MAAMC,MAAM,GAAGF,EAAE,CAACG,UAAU;QAE5B,IAAID,MAAM,CAACR,MAAM,EAAC;UAChB,MAAMU,IAAI,GAAGnB,KAAK,CAACoB,aAAa,CAACL,EAAE,CAACM,MAAM,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;UACtD,IAAI,CAACb,KAAK,GAAGe,IAAI;;MAErB,CAAC;MACDR,MAAM,CAACW,iBAAiB,CAACZ,IAAI,CAAC;MAC9Ba,OAAO,CAACC,GAAG,CAAC,IAAI,CAACpB,KAAK,CAAC;;EAE3B;;SAlDWH,YAAY;;mBAAZA,MAAY;AAAA;;QAAZA,MAAY;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRzBE,EAAA,CAAAC,cAAA,eAI4B;MAHGD,EAAA,CAAAE,UAAA,oBAAAC,8CAAA9B,MAAA;QAAA,OAAU0B,GAAA,CAAA3B,SAAA,CAAAC,MAAA,CAAkB;MAAA,EAAC;MAD5D2B,EAAA,CAAAI,YAAA,EAI4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}