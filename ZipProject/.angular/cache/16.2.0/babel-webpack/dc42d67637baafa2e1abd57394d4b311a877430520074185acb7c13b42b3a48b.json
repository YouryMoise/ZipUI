{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'ZipProject';\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Hello\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\macse\\Downloads\\ZipProject\\src\\app\\app.component.ts","C:\\Users\\macse\\Downloads\\ZipProject\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ZipProject';\n\n  /*\n\n  ZipCounter\n  Take an excel sheet with 2 key rows, the zip codes(ZIP) and\n  the event(some string with a date and tag(just care about tag))\n  Make an excel sheet with the tags on the left and \n  zip codes on the top, then the correct number for each zip-tag pair\n\n  ZipConverter\n  Given an excel sheet from ZipCounter(table with zip-tag pairs)\n  Convert all Zip Codes to coordinates\n  This may be too quick to justify being something \n  different\n\n  Frontend\n  Should have a button asking which you want to use\n  Allow you to choose a file by browsing file explorer\n  If you chose counter, it should ask if you want to do counter\n  and converter\n\n\n  */\n\n\n//START OF ZIP CONVERTER CODE\n//need to figure out how to take files in\n//just set any input vars for now\n\n\n\n//take input file + input sheet and make\n//sure it actually exists on device\n\n//same for output(no sheet)\n\n//request tags and put them all in a list\n\n//read input file/sheet\n\n//create a dictionary of dictionaries \n//as we go\n//Each outer key is a unique tag\n//Each value is a dictionary\n  //Each key is zip, each val is #occurences\n//loop over the tags and add/update zip in \n//dict as necessary\n\n\n\n\n\n\n}\n","<p>Hello</p>"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,YAAY;;;SADTF,YAAY;;mBAAZA,MAAY;AAAA;;QAAZA,MAAY;EAAAG,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCPzBE,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,YAAK;MAAAF,EAAA,CAAAG,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}